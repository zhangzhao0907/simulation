{"version":3,"sources":["ResultData.js","test.js","Initiation.js","Global.js","Filter.js","SimulationList.js","Introduction.js","Tutorial.js","Success.js","Contact.js","App.js","index.js"],"names":["Menu","SubMenu","Layout","Header","Content","Sider","formItemLayout","labelCol","span","wrapperCol","Initiation","history","useHistory","name","onFinish","axios","get","firstName","lastName","then","response","console","log","catch","error","push","initialValues","className","style","margin","Item","label","min","max","Group","value","placeholder","width","offset","type","htmlType","input","title","key","chn","output","dataSource","i","columns","dataIndex","prefixStatic","ExclamationCircleTwoTone","PieChartTwoTone","BoxPlotTwoTone","ExperimentTwoTone","StarTwoTone","SyncOutlined","spin","color","BugOutlined","ThunderboltTwoTone","NodeIndexOutlined","DotChartOutlined","FireOutlined","BorderOutlined","LoginOutlined","OutPutRender","ss","precision","prefix","valueStyle","fontFamily","fontWeight","fontSize","ResultData","gutter","height","src","bordered","size","pagination","rowClassName","scroll","y","React","Component","RangePicker","DatePicker","Option","Select","rangeConfig","rules","message","Fiter","fieldsValue","marginTop","Button","valuePropName","defaultValue","DescriptionItem","content","Description","props","from","to","dataNow","render","gender","colors","data","index","id","time","age","wound_location","bmi","weight","wound_width","wound_depth","skin_tension","tgf_b","tnf_a","inflammatory_cytokine","inflammatory_cell","macrophages_concentraion","wound_healing_time","wound_infected","epidermal_laser_density","dermal_laser_density","laser_diameter","laser_cross","laser_inclination_angle","duration_laser","betamethason_dosage","pressure","tension_reduction","botulinum_toxin","tgf_antibody","avastin_dosage","inhibitor_dosage","epidermal_thickness","scar_thickness","scar_width","vessel_density","type3_collagen_density","Type1_collagen_density","smoothness","tenderness","itchy_intensity","painness","nerve_ending_density","tgf_concentration","tnf_concentration","SimulationList","showDrawer","length","Modal","warning","setState","visible","jump","createHashHistory","pathname","go","onClose","shape","icon","SlidersOutlined","onClick","danger","DeleteOutlined","state","bind","this","Filter","closable","drawerStyle","background","CodeSandboxOutlined","marginRight","ScanOutlined","marginLeft","ManOutlined","ClockCircleOutlined","CalendarOutlined","EditFilled","DropboxOutlined","textAlign","Title","Typography","Paragraph","Text","Link","Introduction","level","strong","href","keyboard","Tutorial","Success","timerID","setInterval","clearInterval","status","subTitle","extra","Contact","Footer","SiderFrame","collapsed","onCollapse","toggle","marginLayout","marginHeader","left","logoMargin","minHeight","theme","defaultSelectedKeys","mode","StarFilled","DatabaseFilled","FolderOpenFilled","FileTextFilled","ReadFilled","PhoneFilled","createElement","MenuUnfoldOutlined","MenuFoldOutlined","padding","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1956f283.chunk.js","sourcesContent":["import './ResultData.css';\nimport React from 'react';\nimport { Statistic, Row, Col, Image, Table } from 'antd';\nimport { input, output } from './Global.js';\nimport { ExclamationCircleTwoTone, PieChartTwoTone, BoxPlotTwoTone, ExperimentTwoTone, StarTwoTone, SyncOutlined, FireOutlined\n        ,BorderOutlined, NodeIndexOutlined, BugOutlined, LoginOutlined, DotChartOutlined, ThunderboltTwoTone} from '@ant-design/icons';\n\n\n\nconst dataSource = [];\n\nfor (let i = 0; i < 28; i++) {\n  dataSource.push(\n    {\n      key: i,\n      title: input[i].title,\n      value: 32,\n    }\n  );\n}\n\nconst columns = [\n  {\n    title: 'Input Parameter Name',\n    dataIndex: 'title',\n    key: 'title',\n    width: '240px',\n  },\n  {\n    title: 'Value',\n    dataIndex: 'value',\n    key: 'value',\n  },\n];\n\n\nconst prefixStatic=[\n  <ExclamationCircleTwoTone />,\n  <PieChartTwoTone />,\n  <BoxPlotTwoTone />,\n  <ExperimentTwoTone />,\n\n  <ExperimentTwoTone />,\n  <ExperimentTwoTone />,\n  <StarTwoTone />,\n  <SyncOutlined spin style={{color:'#1890ff'}}/>,\n\n  <SyncOutlined spin style={{color:'#1890ff'}}/>,\n  <BugOutlined style={{color:'#1890ff'}}/>,\n  <ThunderboltTwoTone style={{color:'#1890ff'}}/>,\n  <NodeIndexOutlined style={{color:'#1890ff'}}/>,\n\n  <DotChartOutlined style={{color:'#1890ff'}}/>,\n  <DotChartOutlined style={{color:'#1890ff'}}/>,\n  <FireOutlined style={{color:'#1890ff'}}/>,\n  <BorderOutlined style={{color:'#1890ff'}}/>,\n\n  <LoginOutlined style={{color:'#1890ff'}}/>\n\n]\nfunction OutPutRender() {\n  const ss = [];\n  for(let i = 0; i <= 16; i++){\n      ss.push(<Col span={4}>\n        <Statistic title={output[i].title} value={11.24 + i*0.4} precision={2} prefix={prefixStatic[i]}\n            valueStyle={{ color: '#002766', fontFamily:'Times New Roman', fontWeight:'bold', fontSize:'16pt'}}/>\n      </Col>);\n  }\n  return ss;\n}\n\n\n\nclass ResultData extends React.Component {\n  render() {\n    return (\n      <div className=\"site-statistic-demo-card\">\n\n        <Row gutter={[8, 16]}>\n          <Col span={16}>\n            <p className=\"banner\">Simulation Result</p>\n            <Image height={500} src=\"WebGL.jpg\"/>\n          </Col>\n          <Col span={8}>\n            <Table dataSource={dataSource} columns={columns} bordered={true}\n              size='small' pagination={false} rowClassName='ant-table-tbodys' scroll={{ y: 500 }} />\n          </Col>\n        </Row>\n\n        <Row gutter={[16, 16]} className='output-row'>\n          <OutPutRender />\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ResultData;","import { Layout, Menu, Breadcrumb } from 'antd';\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport './test.css';\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst Test=()=>{\n    return(\n        <Layout>\n    <Header className=\"header\">\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n        <Menu.Item key=\"1\">nav 1</Menu.Item>\n        <Menu.Item key=\"2\">nav 2</Menu.Item>\n        <Menu.Item key=\"3\">nav 3</Menu.Item>\n      </Menu>\n    </Header>\n    <Layout>\n      <Sider width={200} className=\"site-layout-background\">\n        <Menu\n          mode=\"inline\"\n          defaultSelectedKeys={['1']}\n          defaultOpenKeys={['sub1']}\n          style={{ height: '100%', borderRight: 0 }}\n        >\n          <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\n            <Menu.Item key=\"1\">option1</Menu.Item>\n            <Menu.Item key=\"2\">option2</Menu.Item>\n            <Menu.Item key=\"3\">option3</Menu.Item>\n            <Menu.Item key=\"4\">option4</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\n            <Menu.Item key=\"5\">option5</Menu.Item>\n            <Menu.Item key=\"6\">option6</Menu.Item>\n            <Menu.Item key=\"7\">option7</Menu.Item>\n            <Menu.Item key=\"8\">option8</Menu.Item>\n          </SubMenu>\n          <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\n            <Menu.Item key=\"9\">option9</Menu.Item>\n            <Menu.Item key=\"10\">option10</Menu.Item>\n            <Menu.Item key=\"11\">option11</Menu.Item>\n            <Menu.Item key=\"12\">option12</Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Layout style={{ padding: '0 24px 24px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            padding: 24,\n            margin: 0,\n            minHeight: 280,\n          }}\n        >\n          Content\n        </Content>\n      </Layout>\n    </Layout>\n  </Layout>\n    );\n}\n\nexport default Test;","import './Initiation.css';\nimport {\n  Form,\n  InputNumber,\n  Radio,\n  Button,\n  Input,\n  DatePicker,\n  Divider,\n} from 'antd';\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport axios from 'axios'\n\n\nconst formItemLayout = {\n  labelCol: {\n    span: 10,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n};\n\nconst Initiation = () => {\n  let history = useHistory();\n\n  const onFinish = () => {\n    axios.get('https://www.fitzcat.com:3000/findUser/oQ9bs4laMqVRFqcKhHpA1VM-IiYY', {\n      firstName: 'test',\n      lastName: 'test'\n    }).then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      history.push('/success');\n  };\n\n  return (\n    <Form\n      name=\"initiation\"\n      {...formItemLayout}\n      onFinish={onFinish}\n      initialValues={{\n        ['age']: 25,\n        ['bmi']: 18.5,\n        ['weight']: 60,\n      }}>\n      <p className=\"banner\">Initiate a Simulation</p>\n      <Divider style={{ margin: \"0 0 50px\" }} />\n      <Form.Item name=\"age\" label=\"Age 年龄：\">\n        <InputNumber min={1} max={100} />\n      </Form.Item>\n\n      <Form.Item name=\"gender\" label=\"Gender 性别：\">\n        <Radio.Group>\n          <Radio value=\"男\">男</Radio>\n          <Radio value=\"女\">女</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      <Form.Item name=\"wound_location\" label=\"Wound Location 伤疤位置：\">\n        <Input placeholder=\"please enter your wound location\" style={{ width: \"400px\" }} />\n      </Form.Item>\n\n      <Form.Item name=\"bmi\" label=\"BMI：\">\n        <InputNumber min={1} max={300} />\n        <span className=\"span-text\">(BMI index)</span>\n      </Form.Item>\n\n      <Form.Item name=\"weight\" label=\"Weight 体重：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(kg)</span>\n      </Form.Item>\n\n      <Form.Item name=\"wound_width\" label=\"Wound Width 伤疤宽度：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(mm)</span>\n      </Form.Item>\n\n      <Form.Item name=\"wound_depth\" label=\"Wound Depth 伤疤深度：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(mm)</span>\n      </Form.Item>\n\n      <Form.Item name=\"skin_tension\" label=\"Skin Tension 皮肤张力：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"tgf\" label=\"TGF-β Concentraion：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"tnf\" label=\"TNF-ɑ Concentraion：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"inflammatory_cytokine\" label=\"Inflammatory Cytokine Concentraion：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"inflammatory_cell\" label=\"Inflammatory Cell Concentraion：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"macrophages_concentraion\" label=\"Macrophages Concentraion：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"wound_healing_time\" label=\"Wound Healing Time 治疗时间：\">\n        <DatePicker />\n        <span className=\"span-text\">(Please select a date)</span>\n      </Form.Item>\n\n      <Form.Item name=\"wound_infected\" label=\"Wound Infected 伤口感染：\">\n        <Radio.Group>\n          <Radio value=\"是\">是</Radio>\n          <Radio value=\"否\">否</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      <Form.Item name=\"epidermal_laser_density\" label=\"Epidermal Laser Density：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"dermal_laser_density\" label=\"Dermal Laser Density：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"laser_diameter\" label=\"Laser Diameter：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(mm)</span>\n      </Form.Item>\n\n      <Form.Item name=\"laser_cross\" label=\"Laser Cross Section Shape：\">\n        <Input placeholder=\"please describe your Laser Cross Section Shape\" />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"laser_inclination_angle\" label=\"Laser Inclination Angle：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"duration_laser\" label=\"Duration Between Laser Treatment：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"betamethason_dosage\" label=\"Betamethason Dosage：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"pressure\" label=\"Pressure：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"tension_reduction\" label=\"Tension Reduction：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"botulinum_toxin\" label=\"Botulinum Toxin Type A Dosage：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"tgf_antibody\" label=\"TGF-β1 Antibody Dosage：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"avastin_dosage\" label=\"Avastin Dosage：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n      <Form.Item name=\"inhibitor_dosage\" label=\"Inhibitor Dosage：\">\n        <InputNumber min={1} max={150} />\n        <span className=\"span-text\">(the discription of the parameter)</span>\n      </Form.Item>\n\n\n      <Form.Item\n        wrapperCol={{\n          span: 12,\n          offset: 10,\n        }}\n      >\n        <Button type=\"primary\" htmlType=\"submit\">\n          Simulation\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default Initiation;","const input=[\n    {title:'Age',key:'age',chn:'年龄'},\n    {title:'Gender',key:'gender',chn:'性别'},\n    {title:'Wound Location',key:'wound_location',chn:'伤疤位置'},\n    {title:'BMI',key:'bmi' ,chn:' '},\n    {title:'Weight',key:'weight' ,chn:'体重'},\n    {title:'Wound Width',key:'wound_width' ,chn:'伤疤宽度'},\n    \n    {title:'Wound Depth',key:'wound_depth' ,chn:'伤疤深度'},\n    {title:'Skin Tension',key:'skin_tension' ,chn:'皮肤张力'},\n    {title:'TGF-β Concentration',key:'tgf_b' ,chn:''},\n    {title:'TNF-ɑ Concentration',key:'tnf_a' ,chn:''},\n    {title:'Inflammatory Cytokine',key:'inflammatory_cytokine' ,chn:''},\n    {title:'Inflammatory Cell',key:'inflammatory_cell' ,chn:''},\n    \n    {title:'Macrophages',key:'macrophages_concentraion' ,chn:''},\n    {title:'Wound Healing Time',key:'wound_healing_time' ,chn:'治疗时间'},\n    {title:'Wound Infected',key:'wound_infected' ,chn:'伤口感染'},\n    {title:'Epidermal Laser Density',key:'epidermal_laser_density' ,chn:''},\n    {title:'Dermal Laser Density',key:'dermal_laser_density' ,chn:''},\n    {title:'Laser Diameter',key:'laser_diameter' ,chn:''},\n\n    {title:'Laser Cross Section Shape',key:'' ,chn:'laser_cross'},\n    {title:'Laser Inclination Angle',key:'laser_inclination_angle' ,chn:''},\n    {title:'Duration Between Laser Treatment',key:'duration' ,chn:''},\n    {title:'Betamethason Dosage',key:'betamethason_dosage' ,chn:''},\n    {title:'Pressure',key:'pressure' ,chn:''},\n    {title:'Tension Reduction',key:'tension_reduction' ,chn:''},\n\n    {title:'Botulinum Toxin Type A Dosage',key:'botulinum_toxin' ,chn:''},\n    {title:'TGF-β1 Antibody Dosage',key:'tgf_b1_antibody' ,chn:''},\n    {title:'Avastin Dosage',key:'avastin_dosage' ,chn:''},\n    {title:'Inhibitor Dosage',key:'inhibitor_dosage' ,chn:''},\n];\n\nconst output=[\n    {title:'Epidermal Thickness',key:'epidermal_thickness',chn:''},\n    {title:'Scar Thickness',key:'scar_thickness',chn:''},\n    {title:'Scar Width',key:'scar_width',chn:''},\n    {title:'Vessel Density',key:'vessel_density' ,chn:''},\n    {title:'Type III Collagen Density',key:'type3_collagen_density' ,chn:''},\n    {title:'Type I Collagen Density',key:'type1_collagen_density' ,chn:''},\n    \n    {title:'Color',key:'color',chn:''},\n    {title:'Smoothness',key:'smoothness',chn:''},\n    {title:'Tenderness',key:'tenderness',chn:''},\n    {title:'Itchy Intensity',key:'itchy_intensity',chn:''},\n    {title:'Painness',key:'painness',chn:''},\n    {title:'Nerve Ending Density',key:'nerve_ending_density',chn:''},\n    \n    {title:'TGF-β Concentration',key:'tgf_b_concentration',chn:''},\n    {title:'TNF-ɑ Concentration',key:'tnf_a_concentration',chn:''},\n    {title:'Inflammatory Cytokine',key:'inflammatory_cytokine',chn:''},\n    {title:'Inflamatory Cell Concentration',key:'inflamatory_cell',chn:''},\n    {title:'Macrophages Concentraion',key:'macrophages_concentraion',chn:''},\n]\n\nexport {input,output};","import { Form, DatePicker, Input, Button, Row, Col, Radio, Switch, Select } from 'antd';\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nconst rangeConfig = {\n    rules: [{ type: 'array', message: 'Please select time!' }],\n};\n\nconst Fiter = () => {\n    const onFinish = fieldsValue => {\n\n    };\n\n    return (\n        <Form onFinish={onFinish} size='small'>\n            <Row gutter={[16, 0]}>\n                <Col span={4}>\n                    <Form.Item name={'id'} label=\"Search By Id\">\n                        <Input placeholder=\"please enter the simulation id\" />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Button type=\"primary\">Search</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={[16, 0]} style={{ marginTop: \"-10px\" }}>\n                <Col span={6}>\n                    <Form.Item name=\"Date\" label=\"Date\" {...rangeConfig}>\n                        <RangePicker />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item name=\"gender\" label=\"Gender\">\n                        <Radio.Group>\n                            <Radio.Button value=\"male\">Male</Radio.Button>\n                            <Radio.Button value=\"female\">Female</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item name=\"render\" label=\"Render\" valuePropName=\"checked\">\n                        <Switch />\n                    </Form.Item>\n                </Col>\n\n                <Col span={4}>\n                    <Form.Item name=\"location\" label=\"Location\">\n                        <Select defaultValue=\"1\" style={{ width: 100 }}>\n                            <Option value=\"1\">All</Option>\n                            <Option value=\"2\">Head</Option>\n                            <Option value=\"3\">Face</Option>\n                            <Option value=\"4\">Body</Option>\n                            <Option value=\"5\">Hand</Option>\n                            <Option value=\"6\">Foot</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n\n                <Col span={3}>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nexport default Fiter;","import React from 'react';\nimport { createHashHistory } from \"history\";\nimport { Button, Table, Tag, Space, Drawer, Row, Col, Modal, Card } from 'antd';\nimport { DeleteOutlined, CodeSandboxOutlined, SlidersOutlined, ManOutlined, ScanOutlined,\n    CalendarOutlined, ClockCircleOutlined, EditFilled, DropboxOutlined} from '@ant-design/icons';\nimport { input, output } from './Global.js';\nimport './SimulationList.css';\n\nimport Filter from './Filter.js'\n\n\nconst DescriptionItem = ({ title, content }) => (\n    <div className=\"discription-wrapper\">\n        <p className=\"discription-wrapper-p\">{title}:</p>\n        {content}\n    </div>\n);\n\nfunction Description(props) {\n    const ss = [];\n    for (let i = props.from; i <= props.to; i++) {\n        ss.push(<DescriptionItem title={input[i].title} content={props.dataNow[input[i].key]}></DescriptionItem>);\n    }\n    return ss;\n}\n\nconst columns = [\n    {\n        title: 'Id',\n        dataIndex: 'id',\n        key: 'id',\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        render: gender => {\n            let colors = (gender == 'male') ? 'blue' : 'red';\n            return (\n                <Tag color={colors} key={gender}>{gender}</Tag>\n            );\n        },\n    },\n    {\n        title: 'Location',\n        dataIndex: 'wound_location',\n        key: 'location',\n    },\n    {\n        title: 'Render',\n        dataIndex: 'render',\n        key: 'render',\n        render: render => {\n            let colors = (render == 'true') ? 'blue' : 'red';\n            return (\n                <Tag color={colors} key={render}>{render}</Tag>\n            );\n        },\n    },\n    {\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time',\n    },\n    {\n        title: 'Action',\n        dataIndex: 'index',\n    },\n];\n\nconst data = [];\nfor (let i = 0; i < 100; i++) {\n    data.push({\n        index: i,\n        id: i,\n        render: i % 2 == 0 ? 'true' : 'false',\n        time: `2020-11-11`,\n\n        age: 32,\n        gender: i % 2 == 1 ? 'male' : 'female',\n        wound_location: 'face',\n        bmi: 3.5 * i,\n        weight: 67,\n        wound_width: 34,\n        wound_depth: 3 * i,\n        skin_tension: 98,\n        tgf_b: 29,\n        tnf_a: 22.5,\n        inflammatory_cytokine: 12.4,\n        inflammatory_cell: 22.1,\n        macrophages_concentraion: 22.7,\n        wound_healing_time: '2020-10-11',\n        wound_infected: false,\n        epidermal_laser_density: 32.3,\n        dermal_laser_density: 32.3,\n        laser_diameter: 22.2,\n        laser_cross: 14.3,\n        laser_inclination_angle: 80,\n        duration_laser: 2.3,\n        betamethason_dosage: 11,\n        pressure: 99,\n        tension_reduction: 80.3,\n        botulinum_toxin: 22.1,\n        tgf_antibody: 12.2,\n        avastin_dosage: 32.2,\n        inhibitor_dosage: 22.7,\n\n        epidermal_thickness: 97.3,\n        scar_thickness: 66.4,\n        scar_width: 10,\n        vessel_density: 89.5,\n        type3_collagen_density: 12.5,\n        Type1_collagen_density: 90.3,\n        color: 23,\n        smoothness: 21,\n        tenderness: 34,\n        itchy_intensity: 12,\n        painness: 90,\n        nerve_ending_density: 14.4,\n        tgf_concentration: 15.3,\n        tnf_concentration: 19.3,\n        inflammatory_cytokine: 90.3,\n        inflamatory_cell_concentration: 90.3,\n        macrophages_concentraion: 89.3,\n    });\n}\n\nclass SimulationList extends React.Component {\n    constructor(props) {\n        super(props);\n        columns[6].render = (index) => (\n            <Space size=\"middle\">\n                <Button type=\"primary\" shape=\"circle\" icon={<SlidersOutlined />} onClick={() => this.showDrawer(index)} />\n                <Button type=\"primary\" danger shape=\"circle\" icon={<DeleteOutlined />} />\n            </Space>\n        );\n\n        this.state = {\n            visible: false,\n            i: 0,\n        };\n\n        this.showDrawer = this.showDrawer.bind(this);\n    }\n\n    showDrawer = (index) => {\n        if (index < 0 || index >= data.length) {\n            Modal.warning({\n                title: 'System Tips',\n                content: 'No More Item...',\n            });\n            return;\n        }\n        this.setState({\n            visible: true,\n            i: index,\n        });\n    };\n\n    jump = () => {\n        let history = createHashHistory();\n        history.push({\n            pathname: \"/result\",\n        });\n        history.go();\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        const dataNow = data[this.state.i];\n        return (\n            <>\n                <Filter />\n                <Table columns={columns} dataSource={data} />\n                <Drawer\n                    width={900}\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.visible}\n                    drawerStyle={{ background: \"#011528\" }}\n                >\n                    <Row>\n                        <Col span={12}>\n                            <h1 style={{ color: \"white\", marginTop: \"-10px\" }}><CodeSandboxOutlined style={{ marginRight: \"8px\", color: \"#1890ff\"}}/><strong>Simulation Result Preview</strong></h1>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={5} offset={1}>\n                            <h3 className=\"discription-h3\"><ScanOutlined style={{color: \"#eb2f96\", marginRight:\"4px\"}}/>\n                                ID:<strong style={{marginLeft:\"6px\"}}>{dataNow.id}</strong>\n                            </h3>\n                        </Col>\n                        <Col span={6}>\n                            <h3 className=\"discription-h3\"><ManOutlined style={{color: \"#eb2f96\", marginRight:\"4px\"}}/>\n                                Gender:<strong style={{marginLeft:\"6px\"}}>{dataNow.gender}</strong>\n                            </h3>\n                        </Col>\n                        <Col span={6}>\n                            <h3 className=\"discription-h3\"><ClockCircleOutlined style={{color: \"#eb2f96\", marginRight:\"4px\"}}/>\n                                Age:<strong style={{marginLeft:\"6px\"}}>{dataNow.age}</strong>\n                            </h3>\n                        </Col>\n                        <Col span={6}>\n                            <h3 className=\"discription-h3\"><CalendarOutlined style={{color: \"#eb2f96\", marginRight:\"4px\"}}/>\n                                Date:<strong style={{marginLeft:\"6px\"}}>{dataNow.time}</strong>\n                            </h3>\n                        </Col>\n                    </Row>\n                    <h3 className=\"sub-title\"><EditFilled style={{marginRight:\"4px\", color: \"#1890ff\"}}/>Input Parameters</h3>\n                    <Card style={{ background: \"#d9d9d9\", marginTop: \"-10px\" }}>\n                        <Row>\n                            <Col span={8}>\n                                <Description dataNow={dataNow} from={2} to={10} />\n                                {/* <DescriptionItem title={input[2].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[3].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[4].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[5].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[6].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[7].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[8].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[9].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[10].title} content='12.5'></DescriptionItem> */}\n                            </Col>\n                            <Col span={8}>\n                                <Description dataNow={dataNow} from={11} to={19} />\n                                {/* <DescriptionItem title={input[11].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[12].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[13].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[14].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[15].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[16].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[17].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[18].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[19].title} content='12.5'></DescriptionItem> */}\n                            </Col>\n                            <Col span={8}>\n                                <Description dataNow={dataNow} from={20} to={27} />\n                                {/* <DescriptionItem title={input[20].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[21].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[22].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[23].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[14].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[25].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[26].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[27].title} content='12.5'></DescriptionItem>\n                            <DescriptionItem title={input[27].title} content='12.5'></DescriptionItem> */}\n                            </Col>\n                        </Row>\n                    </Card>\n\n                    <h3 className=\"sub-title\"><DropboxOutlined style={{marginRight:\"4px\", color: \"#1890ff\"}}/>Simulation Resualt</h3>\n                    <Card style={{ background: \"#d9d9d9\", marginTop: \"-10px\" }}>\n                        <Row>\n                            <Col span={9}>\n                                <DescriptionItem title={output[0].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[1].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[2].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[3].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[4].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[5].title} content='12.5'></DescriptionItem>\n\n                            </Col>\n                            <Col span={7}>\n                                <DescriptionItem title={output[6].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[7].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[8].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[9].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[10].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[11].title} content='12.5'></DescriptionItem>\n                            </Col>\n                            <Col span={8}>\n                                <DescriptionItem title={output[12].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[13].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[14].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[15].title} content='12.5'></DescriptionItem>\n                                <DescriptionItem title={output[16].title} content='12.5'></DescriptionItem>\n                            </Col>\n                        </Row>\n                    </Card>\n\n                    <Row style={{ marginTop: '20px' }}>\n                        <Col span={8} style={{ textAlign: 'center' }}>\n                            <Button type=\"primary\" onClick={() => this.showDrawer(this.state.i - 1)}>Previous</Button>\n                        </Col>\n                        <Col span={8} style={{ textAlign: 'center' }}>\n                            <Button type=\"primary\" style={{ width: \"200px\" }} onClick={() => this.jump()}>3D Rendering</Button>\n                        </Col>\n                        <Col span={8} style={{ textAlign: 'center' }}>\n                            <Button type=\"primary\" onClick={() => this.showDrawer(this.state.i + 1)}>Next</Button>\n                        </Col>\n                    </Row>\n\n                </Drawer>\n            </>\n        );\n    }\n}\n\nexport default SimulationList;","import { Typography } from 'antd';\nimport {Image} from 'antd';\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst Introduction = () => {\n    return (\n        <Typography style={{ margin: '30px' }}>\n            <Title>Introduction</Title>\n            <Paragraph>\n                The purpose of this project is to implement a web-based user interface as the frontend for a Scar\n                Treatment Simulation System. The core functionalities include simulation parameter input interface,\n                simulation result display interface and three-dimensional rendering of scar model..\n            </Paragraph>\n            <Title level={2}>System Description</Title>\n            <Paragraph>\n                The Scar Treatment Simulation System will be mainly used by medical researchers around the world to\n                test various scar treatment combinations. A user might specify many parameters as input and the frontend\n                should send a request to the simulation server. The user will be able to retrieve the simulation result\n                once it is finished. To enhance the interpretabitliy of results, the frontend wil also render realistic\n                scar models using data returned by the simulation server.\n                <Text strong>\n                    Since one simulation could be very expensive, a user should not expect instantaneous results to be\n                    generated. We have a database system to store previous simulation results and a user can retrieve it\n                    as many times as he or she may want.\n                </Text>.\n            </Paragraph>\n            <Title level={2}>How to use the system</Title>\n            <Paragraph>\n                <p style={{marginTop:\"10px\"}}>click the left arrow to collopse the menu.</p>\n                <Image src=\"tutorial/1.png\"/>\n                <p style={{marginTop:\"10px\"}}>it should be like this.</p>\n                <Image src=\"tutorial/2.png\"/>\n                <p style={{marginTop:\"10px\"}}>click the Simulation item in the menu to initiate a simulation.</p>\n                <p style={{marginTop:\"10px\"}}>When you have finished entering parameters. click the simulation button. In the development version, you can click the button directly without input any parameter.</p>\n                <Image src=\"tutorial/3.png\"/>\n                <p style={{marginTop:\"10px\"}}>Wait a moment. the page will jump in several seconds.</p>\n                <Image src=\"tutorial/4.png\"/>\n                <p style={{marginTop:\"10px\"}}>Now. you can see the simulation result. Including the 3D graph(replaced by a picture), the parameters your have input and the output index.</p>\n                <Image src=\"tutorial/5.png\"/>\n                <p style={{marginTop:\"10px\"}}>you can click the simulation list item to see the simulation list page. In the top of the page, there are some filters. Behind it is the table.\n                you can see the basic information of every simulation. There are two buttons in the right collum of the table. the right one is \"delete\", the left one is \"more\".</p>\n                <Image src=\"tutorial/6.png\"/>\n                <p style={{marginTop:\"10px\"}}>A drawer page will pop up after you click the \"more\" button. It should looked like this.</p>\n                <Image src=\"tutorial/7.png\"/>\n                <p style={{marginTop:\"10px\"}}>You can navigate to other simulations by the previous button and the next button. If you want to see more information such as the 3D graph, you\n                can click the 3D Rendering button.</p>\n            </Paragraph>\n                \n            <Title level={2}>Frontend Specification</Title>\n            <Title level={3}>1.Simulation Task Initiation</Title>\n            <Paragraph>\n                A simulation task can be initiated by sending a POST request with parameters in request body. Parameters\n                should be sent to the server in JSON form.\n            </Paragraph>\n            <Title level={3}>2.Simulation Listing</Title>\n            <Paragraph>\n                A simulation task can be initiated by sending a POST request with parameters in request body. Parameters\n                should be sent to the server in JSON form.\n            </Paragraph>\n            <Title level={3}>3.Simulation Result Retrieval</Title>\n            <Paragraph>\n                Simulation result can be retrieved by sending a GET request with task id. All results will be returned back in JSON form.\n            </Paragraph>\n            <Title level={2}>3D renderingn</Title>\n            <Paragraph>\n                The ultimate geometry of a scar can also be retrieved from the server. It is represented in a mesh where points\n                and normals are specified. Material parameters will also be embedded in the return result. Rendering can be achieved\n                by using WebGL.\n            </Paragraph>\n            <Paragraph>\n                <ul>\n                    <li>\n                        <Link href=\"\">How to use the system</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">the parameters interprete</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">contact us</Link>\n                    </li>\n                </ul>\n            </Paragraph>\n\n            <Paragraph>\n                Press <Text keyboard>Esc</Text> to exit...\n    </Paragraph>\n\n        </Typography>\n    );\n}\n\nexport default Introduction;","import { Typography } from 'antd';\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst Tutorial = () => {\n    return (\n        <Typography style={{ margin: '30px' }}>\n            <Title>Tutorial</Title>\n            <Paragraph>\n                <ul>\n                    <li>\n                        <Link href=\"\">Quick Start</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">How to use the system</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">The parameters interpretation</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">The result interpretation</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">3D Rendering introduction</Link>\n                    </li>\n                    <li>\n                        <Link href=\"\">Contact us</Link>\n                    </li>\n                </ul>\n            </Paragraph>\n            <Paragraph>\n                The purpose of this project is to implement a web-based user interface as the frontend for a Scar\n                Treatment Simulation System. The core functionalities include simulation parameter input interface,\n                simulation result display interface and three-dimensional rendering of scar model..\n            </Paragraph>\n            <Title level={2}>System Description</Title>\n            <Paragraph>\n                The Scar Treatment Simulation System will be mainly used by medical researchers around the world to\n                test various scar treatment combinations. A user might specify many parameters as input and the frontend\n                should send a request to the simulation server. The user will be able to retrieve the simulation result\n                once it is finished. To enhance the interpretabitliy of results, the frontend wil also render realistic\n                scar models using data returned by the simulation server.\n                <Text strong>\n                    Since one simulation could be very expensive, a user should not expect instantaneous results to be\n                    generated. We have a database system to store previous simulation results and a user can retrieve it\n                    as many times as he or she may want.\n                </Text>.\n            </Paragraph>\n            <Title level={2}>Frontend Specification</Title>\n            <Title level={3}>1.Simulation Task Initiation</Title>\n            <Paragraph>\n                A simulation task can be initiated by sending a POST request with parameters in request body. Parameters\n                should be sent to the server in JSON form.\n            </Paragraph>\n            <Title level={3}>2.Simulation Listing</Title>\n            <Paragraph>\n                A simulation task can be initiated by sending a POST request with parameters in request body. Parameters\n                should be sent to the server in JSON form.\n            </Paragraph>\n            <Title level={3}>3.Simulation Result Retrieval</Title>\n            <Paragraph>\n                Simulation result can be retrieved by sending a GET request with task id. All results will be returned back in JSON form.\n            </Paragraph>\n            <Title level={2}>3D renderingn</Title>\n            <Paragraph>\n                The ultimate geometry of a scar can also be retrieved from the server. It is represented in a mesh where points\n                and normals are specified. Material parameters will also be embedded in the return result. Rendering can be achieved\n                by using WebGL.\n            </Paragraph>\n\n            <Paragraph>\n                Press <Text keyboard>Esc</Text> to exit...\n    </Paragraph>\n\n        </Typography>\n    );\n}\n\nexport default Tutorial;","import React from 'react';\nimport { createHashHistory } from \"history\";\nimport { Result, Spin } from 'antd';\n\n\nclass Success extends React.Component {\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.jump(),\n            3000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    jump() {\n        let history = createHashHistory();\n        history.push({\n            pathname: \"/result\",\n        });\n        history.go();\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"success\"\n                title=\"Successfully Post Your Parameters!\"\n                subTitle=\"Please wait a moment for the result page to jump.\"\n                extra={[\n                    <Spin size=\"large\" />,\n                ]}\n            />\n        );\n    }\n}\n\n\n\nexport default Success;","import { Typography } from 'antd';\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst Contact = () => {\n    return (\n        <Typography style={{ margin: '30px' }}>\n            <Title>About Us</Title>\n            <Paragraph>\n                The purpose of this project is to implement a web-based user interface as the frontend for a Scar\n                Treatment Simulation System. The core functionalities include simulation parameter input interface,\n                simulation result display interface and three-dimensional rendering of scar model..\n            </Paragraph>\n            <Title level={2}>Contact Us</Title>\n            <Paragraph>\n                The Scar Treatment Simulation System will be mainly used by medical researchers around the world to\n                test various scar treatment combinations. A user might specify many parameters as input and the frontend\n                should send a request to the simulation server. The user will be able to retrieve the simulation result\n                once it is finished. To enhance the interpretabitliy of results, the frontend wil also render realistic\n                scar models using data returned by the simulation server.\n                <Text strong>\n                    Since one simulation could be very expensive, a user should not expect instantaneous results to be\n                    generated. We have a database system to store previous simulation results and a user can retrieve it\n                    as many times as he or she may want.\n                </Text>.\n            </Paragraph>\n        </Typography>\n    );\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\n\nimport { Layout, Menu, Image } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  FolderOpenFilled,\n  ReadFilled,\n  FileTextFilled,\n  DatabaseFilled,\n  StarFilled,\n  PhoneFilled\n} from '@ant-design/icons';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport Initiation from './Initiation.js'\nimport ResultData from './ResultData.js'\nimport SimulationList from './SimulationList.js'\nimport Introduction from './Introduction.js'\nimport Tutorial from './Tutorial.js'\nimport Success from './Success.js'\nimport Contact from './Contact.js'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SiderFrame extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n\n    this.setState({ collapsed });\n  };\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    const marginLayout = collapsed ? { marginLeft: \"80px\" } : { marginLeft: \"200px\" }\n    const marginHeader = collapsed ? { left: \"80px\" } : { left: \"200px\" }\n    const logoMargin = collapsed ? { marginRight: \"8px\", marginLeft: \"6px\" } : { marginRight: \"8px\" };\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Router>\n          <Sider className=\"side\" collapsed={collapsed} >\n            <div className=\"logo\"><Image width={45} height={45} src=\"logo.png\" style={logoMargin} /><strong>Simulation</strong></div>\n            <Menu theme='dark' defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item key=\"1\" icon={<StarFilled />}>\n                <Link to=\"/initiation\">Simulation</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" icon={<DatabaseFilled />}>\n                <Link to=\"/simulations\">Simulation List</Link>\n              </Menu.Item>\n              <SubMenu key=\"sub4\" icon={<FolderOpenFilled />} title=\"Document\">\n                <Menu.Item key=\"3\" icon={<FileTextFilled />}>\n                  <Link to=\"/introduction\">Introduction</Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\" icon={<ReadFilled />}>\n                  <Link to=\"/tutorial\">Tutorial</Link>\n                </Menu.Item>\n              </SubMenu>\n              <Menu.Item key=\"5\" icon={<PhoneFilled />}>\n                  <Link to=\"/contact\">Contact Us</Link>\n            </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\" style={marginLayout}>\n            <Header className=\"header-style\" style={marginHeader}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n              })}\n              <h1>Scar TreatMent Simulation System</h1>\n            </Header>\n            <Content style={{ margin: '68px 15px 15px 15px' }}>\n              <div className=\"site-layout-background\" style={{ padding: 20, minHeight: 600 }}>\n                <Switch>\n                  <Route exact={true} path=\"/\">\n                    <Introduction />\n                  </Route>\n                  <Route path=\"/initiation\">\n                    <Initiation />\n                  </Route>\n                  <Route path=\"/simulations\">\n                    <SimulationList />\n                  </Route>\n                  <Route path=\"/result\">\n                    <ResultData />\n                  </Route>\n                  <Route path=\"/introduction\">\n                    <Introduction />\n                  </Route>\n                  <Route path=\"/tutorial\">\n                    <Tutorial />\n                  </Route>\n                  <Route path=\"/success\">\n                    <Success />\n                  </Route>\n                  <Route path=\"/contact\">\n                    <Contact />\n                  </Route>\n                </Switch>\n              </div>\n            </Content>\n            <Footer className=\"footer-style\">Scar Treatment Simulation System@xinhua hospital</Footer>\n          </Layout>\n        </Router>\n      </Layout>\n    );\n  }\n}\n\nexport default SiderFrame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Test from './test';\nimport SiderFrame from './App';\n\nReactDOM.render(\n  <SiderFrame />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}